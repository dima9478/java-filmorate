CREATE TABLE IF NOT EXISTS ratings
(
    rating_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name      varchar UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(200) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         varchar(200) NOT NULL,
    description  text,
    release_date timestamp,
    duration     integer CHECK (duration > 0),
    rating_id    integer REFERENCES ratings (rating_id)
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  integer REFERENCES films (film_id),
    genre_id integer REFERENCES genres (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(200) UNIQUE NOT NULL,
    login    varchar(200)        NOT NULL,
    name     varchar(200),
    birthday date
);

CREATE TABLE IF NOT EXISTS film_likes
(
    film_id integer REFERENCES films (film_id),
    user_id integer REFERENCES users (user_id),
    PRIMARY KEY (film_id, user_id)
);



CREATE TABLE IF NOT EXISTS friendships
(
    user_id   integer REFERENCES users (user_id),
    friend_id integer REFERENCES users (user_id),
    PRIMARY KEY (user_id, friend_id),
    CONSTRAINT friend_check CHECK (user_id != friend_id)
);
